
package iuEscritorio;

import controladores.ControladorTablaControlPropietario;
import javax.swing.table.DefaultTableModel;
import logica.BonificacionAsignada;
import logica.Notificacion;
import logica.Propietario;
import logica.Recarga;
import logica.Transito;
import logica.Vehiculo;
import controladores.IVistaTablaControlPropietario;
import java.util.Collections;


public class tablaControlPropietarioDialogo extends javax.swing.JFrame implements IVistaTablaControlPropietario{

    /**
     * Creates new form controlPropietario
     */
    private Propietario usuario;
    private int filaSeleccionada;
    private ControladorTablaControlPropietario controlTablaControl;
     
    public tablaControlPropietarioDialogo(Object obj) {
        
        usuario = (Propietario) obj;
        initComponents();
        controlTablaControl = new ControladorTablaControlPropietario(this, usuario);
        
        filaSeleccionada = -1;
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        montoSaldo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        namePropietario = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        vehiculosRegistrador = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        bonificacionesAsignadas = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        notificacionesSistema = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        recargasSaldo = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        transitosRealizados = new javax.swing.JTable();
        cantVehiculosRegistrados = new javax.swing.JLabel();
        cantBonificaciones = new javax.swing.JLabel();
        canttransitos = new javax.swing.JLabel();
        cantSaldo = new javax.swing.JLabel();
        cantNotificacioens = new javax.swing.JLabel();
        btnRecargar = new javax.swing.JButton();
        btnBorrarNotificacion = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Saldo: ");

        montoSaldo.setText("jLabel1");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Usuario: ");

        namePropietario.setText("jLabel3");

        vehiculosRegistrador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Matricula", "Modelo", "Color", "#Transitos", "MontoTotal"
            }
        ));
        jScrollPane1.setViewportView(vehiculosRegistrador);

        bonificacionesAsignadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre Bonificacion", "Puesto", "Fecha Asignada"
            }
        ));
        jScrollPane2.setViewportView(bonificacionesAsignadas);

        notificacionesSistema.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Fecha", "Mensaje"
            }
        ));
        jScrollPane3.setViewportView(notificacionesSistema);

        recargasSaldo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Fecha recarga", "Monto", "Estado", "Administrador"
            }
        ));
        jScrollPane4.setViewportView(recargasSaldo);

        transitosRealizados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Puesto", "Matricula", "Tarifa", "Tarifa(monto)", "Bonificacion", "Bonificacion (monto)", "Monto Pagado", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(transitosRealizados);

        cantVehiculosRegistrados.setText("jLabel3");

        cantBonificaciones.setText("jLabel4");

        canttransitos.setText("jLabel5");

        cantSaldo.setText("jLabel6");

        cantNotificacioens.setText("jLabel7");

        btnRecargar.setText("Recargar");
        btnRecargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecargarActionPerformed(evt);
            }
        });

        btnBorrarNotificacion.setText("Borrar");
        btnBorrarNotificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarNotificacionActionPerformed(evt);
            }
        });

        jButton3.setText("Cerrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Vehiculo");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Bonificaciones");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Transitos");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Recargas");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Notificaciones");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(montoSaldo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namePropietario)
                .addGap(178, 178, 178))
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnRecargar, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                    .addComponent(btnBorrarNotificacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cantNotificacioens))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cantVehiculosRegistrados))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(33, 33, 33)
                                            .addComponent(cantSaldo))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cantBonificaciones))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(33, 33, 33)
                                            .addComponent(canttransitos))))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(montoSaldo)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namePropietario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cantVehiculosRegistrados)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cantBonificaciones)
                            .addComponent(jLabel3))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(canttransitos)
                            .addComponent(jLabel5))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cantSaldo)
                            .addComponent(jLabel6))
                        .addGap(27, 27, 27)
                        .addComponent(btnRecargar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cantNotificacioens)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrarNotificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecargarActionPerformed
        //rootPaneCheckingEnabled 
        new RecargaSaldoDialogo(this, false, (Propietario) usuario).setVisible(true);
        
    }//GEN-LAST:event_btnRecargarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnBorrarNotificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarNotificacionActionPerformed
        int filaSeleccionada = notificacionesSistema.getSelectedRow();

        // Verifica si se ha seleccionado una fila
        if (filaSeleccionada == -1) {
            // No se ha seleccionado ninguna recarga
            return;
        }
        
        controlTablaControl.borrarNotificacion(filaSeleccionada);      

        // TODO add your handling code here:
    }//GEN-LAST:event_btnBorrarNotificacionActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bonificacionesAsignadas;
    private javax.swing.JButton btnBorrarNotificacion;
    private javax.swing.JButton btnRecargar;
    private javax.swing.JLabel cantBonificaciones;
    private javax.swing.JLabel cantNotificacioens;
    private javax.swing.JLabel cantSaldo;
    private javax.swing.JLabel cantVehiculosRegistrados;
    private javax.swing.JLabel canttransitos;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel montoSaldo;
    private javax.swing.JLabel namePropietario;
    private javax.swing.JTable notificacionesSistema;
    private javax.swing.JTable recargasSaldo;
    private javax.swing.JTable transitosRealizados;
    private javax.swing.JTable vehiculosRegistrador;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mostrarDatosPropetario(Propietario prop) {
       
        this.cantBonificaciones.setText(String.valueOf(prop.getListaBonificaciones().size()));
        this.cantNotificacioens.setText(String.valueOf(prop.getListaNotificaciones().size()));
        this.cantSaldo.setText(String.valueOf(prop.getListaRecargas().size()));
        this.cantVehiculosRegistrados.setText(String.valueOf(prop.getListaVehiculos().size()));
        this.canttransitos.setText(String.valueOf(prop.getListaTransitos().size()));
        this.namePropietario.setText(prop.getNombre());
        this.montoSaldo.setText(String.valueOf(prop.getSaldo()));
        mostrarDatosTablaVehiculo(prop);
        mostrarDatosTablaBonificaciones(prop);
        mostrarDatosTablaTransitos(prop);
        mostrarDatosTablaRecargas(prop);
        mostrarDatosTablaNotificaciones(prop);
    }

    private void mostrarDatosTablaVehiculo(Propietario prop) {
       DefaultTableModel modelo = (DefaultTableModel) vehiculosRegistrador.getModel();
       modelo.setRowCount(0);
       // Recorrer la lista de vehículos y agregarlos al modelo de la tabla
        for (Vehiculo vehiculo : prop.getListaVehiculos()) {
            // Crear un array con los datos del vehículo
            Object[] fila = {
                vehiculo.getMatricula(),
                vehiculo.getModelo(),
                vehiculo.getColor(),
                vehiculo.getCantTransitos(),
                vehiculo.getMontoTotal()
            };

            // Agregar la fila al modelo de la tabla
            modelo.addRow(fila);
        }
    }
     private void mostrarDatosTablaBonificaciones(Propietario prop) {
       DefaultTableModel modelo = (DefaultTableModel) bonificacionesAsignadas.getModel();
       modelo.setRowCount(0);
       // Recorrer la lista de vehículos y agregarlos al modelo de la tabla
        for ( BonificacionAsignada b : prop.getListaBonificaciones()) {
            // Crear un array con los datos del vehículo
            Object[] fila = {
                b.getBonificacion().getNombre(),
                b.getPuesto().getNombre(),
                b.getFecha(),
            };

            // Agregar la fila al modelo de la tabla
            modelo.addRow(fila);
        }
    }

    private void mostrarDatosTablaTransitos(Propietario prop) {
        DefaultTableModel modelo = (DefaultTableModel) transitosRealizados.getModel();
        modelo.setRowCount(0);
       
        for ( Transito t : prop.getListaTransitos()) {
                Object[] fila = {
                    t.getPuesto().getNombre(),
                    t.getVehiculo().getMatricula(),
                    t.getVehiculo().getCategoria().getNombre(),
                    t.getTarifaPuesto(),
                    t.getBonificacion(),
                    t.getMontoBonificacion(),
                    t.getMontoFinal(),
                    t.getFecha(),
                };
                modelo.addRow(fila);
            }
    }

    private void mostrarDatosTablaNotificaciones(Propietario prop) {
        DefaultTableModel modelo = (DefaultTableModel) notificacionesSistema.getModel();
        modelo.setRowCount(0);

        for ( Notificacion n : prop.getListaNotificaciones()) {
                Object[] fila = {
                   n.getFecha(),
                   n.getMensaje(),
                };
                 modelo.addRow(fila);
        }
    }

    private void mostrarDatosTablaRecargas(Propietario prop) {
       DefaultTableModel modelo = (DefaultTableModel) recargasSaldo.getModel();
       modelo.setRowCount(0);
       
        for ( Recarga b : prop.getListaRecargas()) {
            
                if(b.getUsuarioAdministrador() == null){
                    Object[] fila = {
                   b.getFecha(),
                   b.getMonto(),
                   b.getEstado(),};
                     modelo.addRow(fila);
                }else{
                Object[] fila = {
                   b.getFecha(),
                   b.getMonto(),
                   b.getEstado(),
                   b.getUsuarioAdministrador().getNombre()
                    };
                 modelo.addRow(fila);
                }
            // Agregar la fila al modelo de la tabla
           
        }
    }
}
