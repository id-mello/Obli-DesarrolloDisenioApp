
package iuEscritorio;

import controladores.ControladorAprobarCargaAdministrador;
import controladores.VistaAprobarCargaAdministrador;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Administrador;
import logica.Recarga;

/**
 *
 * @author Ignac
 */
public class AprobacionRecargaDialogo extends javax.swing.JDialog implements VistaAprobarCargaAdministrador{

    private Administrador administrador;
    private int filaSeleccionada;
    private ControladorAprobarCargaAdministrador controlAprobarCarga;
    /**
     * Creates new form AprobacionRecargas
     */
    public AprobacionRecargaDialogo(java.awt.Frame parent, boolean modal,Administrador adm) {
        super(parent, modal);
        this.administrador = adm;
        this.controlAprobarCarga = new ControladorAprobarCargaAdministrador(this, adm);
        initComponents();
        MostrarRecargas();
        
         filaSeleccionada = -1; // Inicializar la variable filaSeleccionada
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRecargasPendientes = new javax.swing.JTable();
        btnAprobar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Aprobaci√≥n de recargas");

        jLabel1.setText("Recargas pendientes:");

        tablaRecargasPendientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "", null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Fecha", "Propietario", "Monto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaRecargasPendientes);

        btnAprobar.setText("Aprobar");
        btnAprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprobarActionPerformed(evt);
            }
        });

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAprobar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAprobar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprobarActionPerformed
     int filaSeleccionada = tablaRecargasPendientes.getSelectedRow();

    // Verifica si se ha seleccionado una fila
    if (filaSeleccionada == -1) {
        // No se ha seleccionado ninguna recarga
        return;
    }

    DefaultTableModel model = (DefaultTableModel) tablaRecargasPendientes.getModel();
    Date fecha = (Date) model.getValueAt(filaSeleccionada, 0);
    String propietario = (String) model.getValueAt(filaSeleccionada, 1);
    double monto = (double) model.getValueAt(filaSeleccionada, 2);

    controlAprobarCarga.aprobarRecarga(fecha, propietario, monto);
    }//GEN-LAST:event_btnAprobarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAprobar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaRecargasPendientes;
    // End of variables declaration//GEN-END:variables

    @Override
    public void MostrarRecargas() {
        ArrayList<Recarga> listaDeRecarga = controlAprobarCarga.traerListaRecargas();
        DefaultTableModel model = (DefaultTableModel) tablaRecargasPendientes.getModel();
        model.setRowCount(0); // Limpiar todas las filas existentes

        for (Recarga recarga : listaDeRecarga) {
            Object[] rowData = {
                recarga.getFecha(),
                recarga.getNombrePropietario(),
                recarga.getMonto()
            };
            model.addRow(rowData);
            
        }
    }

    @Override
    public void RecargaAprobada() {
        MostrarRecargas();
        
    }

    @Override
    public void error(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
}
